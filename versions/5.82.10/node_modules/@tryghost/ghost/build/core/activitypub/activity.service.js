"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActivityService = void 0;
const article_object_1 = require("./article.object");
const common_1 = require("@nestjs/common");
let ActivityService = class ActivityService {
    actorRepository;
    postRepository;
    constructor(actorRepository, postRepository) {
        this.actorRepository = actorRepository;
        this.postRepository = postRepository;
    }
    async createArticleForPost(postId) {
        const actor = await this.actorRepository.getOne('index');
        if (!actor) {
            throw new Error('Actor not found');
        }
        const post = await this.postRepository.getOne(postId);
        if (!post) {
            throw new Error('Post not found');
        }
        if (post.visibility !== 'public') {
            return;
        }
        const article = article_object_1.Article.fromPost(post);
        actor.createArticle(article);
        await this.actorRepository.save(actor);
    }
};
exports.ActivityService = ActivityService;
exports.ActivityService = ActivityService = __decorate([
    __param(0, (0, common_1.Inject)('ActorRepository')),
    __param(1, (0, common_1.Inject)('PostRepository')),
    __metadata("design:paramtypes", [Object, Object])
], ActivityService);
//# sourceMappingURL=activity.service.js.map