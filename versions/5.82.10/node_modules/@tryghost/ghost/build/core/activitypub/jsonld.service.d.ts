/// <reference types="node" />
import { ActorRepository } from './actor.repository';
import ObjectID from 'bson-objectid';
import { PostRepository } from './post.repository';
export declare class JSONLDService {
    private repository;
    private postRepository;
    private url;
    constructor(repository: ActorRepository, postRepository: PostRepository, url: URL);
    getActor(id: ObjectID): Promise<(import("./types").ActivityPub.RootObject & {
        inbox: string;
        outbox: string;
        name: string;
        preferredUsername: string;
        summary: string;
        url: string;
        icon: string;
        image: string;
        published: string;
        manuallyApprovesFollowers: boolean;
        discoverable: boolean;
        attachment: object[];
        following: string;
        followers: string;
        featured: string;
        publicKey: {
            id: string;
            owner: string;
            publicKeyPem: string;
        };
    }) | undefined>;
    getOutbox(owner: ObjectID): Promise<{
        '@context': string;
        id: string;
        summary: string;
        type: string;
        totalItems: number;
        orderedItems: import("./types").ActivityPub.Activity[];
    } | null>;
    getArticle(id: ObjectID): Promise<import("./types").ActivityPub.RootObject & {
        type: "Article";
        name: string;
        content: string;
        url: string;
        attributedTo: string | object[];
    }>;
}
