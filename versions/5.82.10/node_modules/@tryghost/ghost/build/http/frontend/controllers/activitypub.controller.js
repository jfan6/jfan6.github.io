"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActivityPubController = void 0;
const common_1 = require("@nestjs/common");
const permissions_decorator_1 = require("../../../common/decorators/permissions.decorator");
const bson_objectid_1 = __importDefault(require("bson-objectid"));
const jsonld_service_1 = require("../../../core/activitypub/jsonld.service");
let ActivityPubController = class ActivityPubController {
    service;
    constructor(service) {
        this.service = service;
    }
    async getActor(id) {
        if (typeof id !== 'string') {
            throw new Error('Bad Request');
        }
        return this.service.getActor(bson_objectid_1.default.createFromHexString(id));
    }
    async getOutbox(owner) {
        if (typeof owner !== 'string') {
            throw new Error('Bad Request');
        }
        return this.service.getOutbox(bson_objectid_1.default.createFromHexString(owner));
    }
    async getArticle(id) {
        if (typeof id !== 'string') {
            throw new Error('Bad Request');
        }
        return this.service.getArticle(bson_objectid_1.default.createFromHexString(id));
    }
};
exports.ActivityPubController = ActivityPubController;
__decorate([
    (0, common_1.Header)('Cache-Control', 'no-store'),
    (0, common_1.Header)('Content-Type', 'application/activity+json'),
    (0, permissions_decorator_1.Roles)(['Anon']),
    (0, common_1.Get)('actor/:id'),
    __param(0, (0, common_1.Param)('id')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], ActivityPubController.prototype, "getActor", null);
__decorate([
    (0, common_1.Header)('Cache-Control', 'no-store'),
    (0, common_1.Header)('Content-Type', 'application/activity+json'),
    (0, permissions_decorator_1.Roles)(['Anon']),
    (0, common_1.Get)('outbox/:owner'),
    __param(0, (0, common_1.Param)('owner')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], ActivityPubController.prototype, "getOutbox", null);
__decorate([
    (0, common_1.Header)('Cache-Control', 'no-store'),
    (0, common_1.Header)('Content-Type', 'application/activity+json'),
    (0, permissions_decorator_1.Roles)(['Anon']),
    (0, common_1.Get)('article/:id'),
    __param(0, (0, common_1.Param)('id')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], ActivityPubController.prototype, "getArticle", null);
exports.ActivityPubController = ActivityPubController = __decorate([
    (0, common_1.Controller)('activitypub'),
    __metadata("design:paramtypes", [jsonld_service_1.JSONLDService])
], ActivityPubController);
//# sourceMappingURL=activitypub.controller.js.map